<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard1.6;netstandard2.0;net46</TargetFrameworks>
  </PropertyGroup>
  
  <PropertyGroup>
    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>
    <TreatSpecificWarningsAsErrors />
    <CheckForOverflowUnderflow>True</CheckForOverflowUnderflow>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="NuGet.Commands" Version="$(NuGetTargetVersion)" />
    <PackageReference Include="System.Collections.Immutable" Version="1.5.0" />
    <PackageReference Include="UtilPack" Version="1.7.1" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net46' ">
    <Reference Include="System.Runtime" />
    <Reference Include="System.Threading.Tasks" />
    <Reference Include="System.Collections" />
  </ItemGroup>

  <!-- Assembly information stuff -->
  <PropertyGroup>
    <VersionPrefix>1.0.0</VersionPrefix>
    <VersionSuffix></VersionSuffix>
    <AssemblyTitle>$(AssemblyName)</AssemblyTitle>
    <Description>Library containing BoundRestoreCommandUser class, which can be used to easily restore NuGet packages. Also several extension methods are provided to make life easier when working with NuGet types.</Description>
  </PropertyGroup>

  <!-- NuGet package stuff -->
  <PropertyGroup>
    <PackageId>$(AssemblyName)</PackageId>
    <PackageVersion>$(VersionPrefix)</PackageVersion>
    <PackageVersion Condition=" '$(VersionSuffix)' != ''">$(PackageVersion)-$(VersionSuffix)</PackageVersion>
    <PackageReleaseNotes>Initial release after renaming the project from UtilPack.NuGet.</PackageReleaseNotes>
    <PackageTags>utility nuget extensions restore</PackageTags>
    <Title>NuGet Restore Helper</Title>
  </PropertyGroup>

  <Import Project="$(CIPropsFilePath)" Condition=" '$(CIPropsFilePath)' != '' and Exists('$(CIPropsFilePath)') " />

</Project>